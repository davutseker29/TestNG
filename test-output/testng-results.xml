<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="20" passed="16" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-08-18T15:26:20 PDT" name="Suite" finished-at="2020-08-18T15:27:02 PDT" duration-ms="41926">
    <groups>
    </groups>
    <test started-at="2020-08-18T15:26:20 PDT" name="Test" finished-at="2020-08-18T15:27:02 PDT" duration-ms="41790">
      <class name="com.class01.TaskTwo">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.class01.TaskTwo@36c88a32]" started-at="2020-08-18T15:26:20 PDT" name="beforeClass" finished-at="2020-08-18T15:26:20 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="test1()[pri:0, instance:com.class01.TaskTwo@36c88a32]" started-at="2020-08-18T15:26:20 PDT" name="test1" finished-at="2020-08-18T15:26:20 PDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.class01.TaskTwo@36c88a32]" started-at="2020-08-18T15:26:20 PDT" name="beforeMethod" finished-at="2020-08-18T15:26:20 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.class01.TaskTwo@36c88a32]" started-at="2020-08-18T15:26:20 PDT" name="afterMethod" finished-at="2020-08-18T15:26:20 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.class01.TaskTwo@36c88a32]" started-at="2020-08-18T15:26:20 PDT" name="beforeMethod" finished-at="2020-08-18T15:26:20 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test2()[pri:0, instance:com.class01.TaskTwo@36c88a32]" started-at="2020-08-18T15:26:20 PDT" name="test2" finished-at="2020-08-18T15:26:20 PDT" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.class01.TaskTwo@36c88a32]" started-at="2020-08-18T15:26:20 PDT" name="afterMethod" finished-at="2020-08-18T15:26:20 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.class01.TaskTwo@36c88a32]" started-at="2020-08-18T15:26:20 PDT" name="beforeMethod" finished-at="2020-08-18T15:26:20 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test3()[pri:0, instance:com.class01.TaskTwo@36c88a32]" started-at="2020-08-18T15:26:20 PDT" name="test3" finished-at="2020-08-18T15:26:20 PDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.class01.TaskTwo@36c88a32]" started-at="2020-08-18T15:26:20 PDT" name="afterMethod" finished-at="2020-08-18T15:26:20 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.class01.TaskTwo@36c88a32]" started-at="2020-08-18T15:26:20 PDT" name="afterClass" finished-at="2020-08-18T15:26:20 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.class01.TaskTwo -->
      <class name="com.class01.TestNGDemo">
        <test-method signature="testOne()[pri:0, instance:com.class01.TestNGDemo@7880cdf3]" started-at="2020-08-18T15:26:20 PDT" name="testOne" finished-at="2020-08-18T15:26:20 PDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOne -->
        <test-method signature="testThree()[pri:0, instance:com.class01.TestNGDemo@7880cdf3]" started-at="2020-08-18T15:26:20 PDT" name="testThree" finished-at="2020-08-18T15:26:20 PDT" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testThree -->
        <test-method signature="testTwo()[pri:0, instance:com.class01.TestNGDemo@7880cdf3]" started-at="2020-08-18T15:26:20 PDT" name="testTwo" finished-at="2020-08-18T15:26:20 PDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwo -->
      </class> <!-- com.class01.TestNGDemo -->
      <class name="com.class01.DifferentAnnotations">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.class01.DifferentAnnotations@ef9296d]" started-at="2020-08-18T15:26:20 PDT" name="beforeTest" finished-at="2020-08-18T15:26:20 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.class01.DifferentAnnotations@ef9296d]" started-at="2020-08-18T15:26:20 PDT" name="beforeClass" finished-at="2020-08-18T15:26:20 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.class01.DifferentAnnotations@ef9296d]" started-at="2020-08-18T15:26:20 PDT" name="beforeMethod" finished-at="2020-08-18T15:26:20 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testMethod()[pri:0, instance:com.class01.DifferentAnnotations@ef9296d]" started-at="2020-08-18T15:26:20 PDT" name="testMethod" finished-at="2020-08-18T15:26:20 PDT" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.class01.DifferentAnnotations@ef9296d]" started-at="2020-08-18T15:26:20 PDT" name="afterMethod" finished-at="2020-08-18T15:26:20 PDT" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.class01.DifferentAnnotations@ef9296d]" started-at="2020-08-18T15:26:20 PDT" name="afterClass" finished-at="2020-08-18T15:26:20 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.class01.DifferentAnnotations@ef9296d]" started-at="2020-08-18T15:27:02 PDT" name="afterTest" finished-at="2020-08-18T15:27:02 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.class01.DifferentAnnotations -->
      <class name="com.class01.TitleLogoAndLoginValidation">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.class01.TitleLogoAndLoginValidation@5be6e01c]" started-at="2020-08-18T15:26:20 PDT" name="setUp" finished-at="2020-08-18T15:26:30 PDT" duration-ms="9552" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginValidation()[pri:0, instance:com.class01.TitleLogoAndLoginValidation@5be6e01c]" started-at="2020-08-18T15:26:30 PDT" name="loginValidation" finished-at="2020-08-18T15:26:45 PDT" duration-ms="15492" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[@class='panelTrigger']"}
  (Session info: chrome=84.0.4147.125)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'DAVID', ip: '192.168.0.12', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '13.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.125, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: C:\Users\User\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:53390}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 0bb1a59442e622a79b5f6ec8bf797062
*** Element info: {Using=xpath, value=//a[@class='panelTrigger']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[@class='panelTrigger']"}
  (Session info: chrome=84.0.4147.125)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'DAVID', ip: '192.168.0.12', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '13.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.125, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: C:\Users\User\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:53390}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 0bb1a59442e622a79b5f6ec8bf797062
*** Element info: {Using=xpath, value=//a[@class='panelTrigger']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at com.class01.TitleLogoAndLoginValidation.loginValidation(TitleLogoAndLoginValidation.java:46)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.class01.TitleLogoAndLoginValidation@5be6e01c]" started-at="2020-08-18T15:26:45 PDT" name="tearDown" finished-at="2020-08-18T15:26:46 PDT" duration-ms="707" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.class01.TitleLogoAndLoginValidation@5be6e01c]" started-at="2020-08-18T15:26:46 PDT" name="setUp" finished-at="2020-08-18T15:26:54 PDT" duration-ms="7915" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="logoValidation()[pri:0, instance:com.class01.TitleLogoAndLoginValidation@5be6e01c]" started-at="2020-08-18T15:26:54 PDT" name="logoValidation" finished-at="2020-08-18T15:26:54 PDT" duration-ms="84" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.class01.TitleLogoAndLoginValidation@5be6e01c]" started-at="2020-08-18T15:26:54 PDT" name="tearDown" finished-at="2020-08-18T15:26:55 PDT" duration-ms="706" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.class01.TitleLogoAndLoginValidation@5be6e01c]" started-at="2020-08-18T15:26:55 PDT" name="setUp" finished-at="2020-08-18T15:27:01 PDT" duration-ms="6505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="titleValidation()[pri:0, instance:com.class01.TitleLogoAndLoginValidation@5be6e01c]" started-at="2020-08-18T15:27:01 PDT" name="titleValidation" finished-at="2020-08-18T15:27:01 PDT" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- titleValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.class01.TitleLogoAndLoginValidation@5be6e01c]" started-at="2020-08-18T15:27:01 PDT" name="tearDown" finished-at="2020-08-18T15:27:02 PDT" duration-ms="668" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.class01.TitleLogoAndLoginValidation -->
    </test> <!-- Test -->
    <test started-at="2020-08-18T15:27:02 PDT" name="Test class01" finished-at="2020-08-18T15:27:02 PDT" duration-ms="41">
      <class name="com.class01.TaskTwo">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.class01.TaskTwo@10e41621]" started-at="2020-08-18T15:27:02 PDT" name="beforeMethod" finished-at="2020-08-18T15:27:02 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.class01.TaskTwo@10e41621]" started-at="2020-08-18T15:27:02 PDT" name="beforeClass" finished-at="2020-08-18T15:27:02 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="test1()[pri:0, instance:com.class01.TaskTwo@10e41621]" started-at="2020-08-18T15:27:02 PDT" name="test1" finished-at="2020-08-18T15:27:02 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.class01.TaskTwo@10e41621]" started-at="2020-08-18T15:27:02 PDT" name="afterMethod" finished-at="2020-08-18T15:27:02 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.class01.TaskTwo@10e41621]" started-at="2020-08-18T15:27:02 PDT" name="beforeMethod" finished-at="2020-08-18T15:27:02 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test2()[pri:0, instance:com.class01.TaskTwo@10e41621]" started-at="2020-08-18T15:27:02 PDT" name="test2" finished-at="2020-08-18T15:27:02 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.class01.TaskTwo@10e41621]" started-at="2020-08-18T15:27:02 PDT" name="afterMethod" finished-at="2020-08-18T15:27:02 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.class01.TaskTwo@10e41621]" started-at="2020-08-18T15:27:02 PDT" name="beforeMethod" finished-at="2020-08-18T15:27:02 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test3()[pri:0, instance:com.class01.TaskTwo@10e41621]" started-at="2020-08-18T15:27:02 PDT" name="test3" finished-at="2020-08-18T15:27:02 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.class01.TaskTwo@10e41621]" started-at="2020-08-18T15:27:02 PDT" name="afterMethod" finished-at="2020-08-18T15:27:02 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.class01.TaskTwo@10e41621]" started-at="2020-08-18T15:27:02 PDT" name="afterClass" finished-at="2020-08-18T15:27:02 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.class01.TaskTwo -->
      <class name="com.class01.TestNGDemo">
        <test-method signature="testOne()[pri:0, instance:com.class01.TestNGDemo@353d0772]" started-at="2020-08-18T15:27:02 PDT" name="testOne" finished-at="2020-08-18T15:27:02 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOne -->
        <test-method signature="testThree()[pri:0, instance:com.class01.TestNGDemo@353d0772]" started-at="2020-08-18T15:27:02 PDT" name="testThree" finished-at="2020-08-18T15:27:02 PDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testThree -->
        <test-method signature="testTwo()[pri:0, instance:com.class01.TestNGDemo@353d0772]" started-at="2020-08-18T15:27:02 PDT" name="testTwo" finished-at="2020-08-18T15:27:02 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwo -->
      </class> <!-- com.class01.TestNGDemo -->
      <class name="com.class01.DifferentAnnotations">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:com.class01.DifferentAnnotations@4b0b0854]" started-at="2020-08-18T15:26:20 PDT" name="beforeSuite" finished-at="2020-08-18T15:26:20 PDT" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.class01.DifferentAnnotations@4b0b0854]" started-at="2020-08-18T15:27:02 PDT" name="beforeTest" finished-at="2020-08-18T15:27:02 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.class01.DifferentAnnotations@4b0b0854]" started-at="2020-08-18T15:27:02 PDT" name="beforeClass" finished-at="2020-08-18T15:27:02 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="testMethod()[pri:0, instance:com.class01.DifferentAnnotations@4b0b0854]" started-at="2020-08-18T15:27:02 PDT" name="testMethod" finished-at="2020-08-18T15:27:02 PDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.class01.DifferentAnnotations@4b0b0854]" started-at="2020-08-18T15:27:02 PDT" name="beforeMethod" finished-at="2020-08-18T15:27:02 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.class01.DifferentAnnotations@4b0b0854]" started-at="2020-08-18T15:27:02 PDT" name="afterClass" finished-at="2020-08-18T15:27:02 PDT" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.class01.DifferentAnnotations@4b0b0854]" started-at="2020-08-18T15:27:02 PDT" name="afterMethod" finished-at="2020-08-18T15:27:02 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.class01.DifferentAnnotations@4b0b0854]" started-at="2020-08-18T15:27:02 PDT" name="afterTest" finished-at="2020-08-18T15:27:02 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:com.class01.DifferentAnnotations@4b0b0854]" started-at="2020-08-18T15:27:03 PDT" name="afterSuite" finished-at="2020-08-18T15:27:03 PDT" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.class01.DifferentAnnotations -->
    </test> <!-- Test class01 -->
  </suite> <!-- Suite -->
</testng-results>
