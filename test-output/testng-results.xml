<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="14" passed="11" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-08-11T22:47:00 PDT" name="Suite" finished-at="2021-08-11T22:47:43 PDT" duration-ms="42549">
    <groups>
    </groups>
    <test started-at="2021-08-11T22:47:00 PDT" name="Test" finished-at="2021-08-11T22:47:43 PDT" duration-ms="42549">
      <class name="com.class02.AssertClassDemo">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.class02.AssertClassDemo@65466a6a]" started-at="2021-08-11T22:47:00 PDT" name="setUp" finished-at="2021-08-11T22:47:04 PDT" duration-ms="3700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="titleValidation()[pri:0, instance:com.class02.AssertClassDemo@65466a6a]" started-at="2021-08-11T22:47:04 PDT" name="titleValidation" finished-at="2021-08-11T22:47:04 PDT" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- titleValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.class02.AssertClassDemo@65466a6a]" started-at="2021-08-11T22:47:04 PDT" name="tearDown" finished-at="2021-08-11T22:47:05 PDT" duration-ms="763" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.class02.AssertClassDemo -->
      <class name="com.class02.AssertionDemo">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.class02.AssertionDemo@1534f01b]" started-at="2021-08-11T22:47:22 PDT" name="setUp" finished-at="2021-08-11T22:47:25 PDT" duration-ms="2787" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="titleValidation()[pri:0, instance:com.class02.AssertionDemo@1534f01b]" started-at="2021-08-11T22:47:25 PDT" name="titleValidation" finished-at="2021-08-11T22:47:25 PDT" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- titleValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.class02.AssertionDemo@1534f01b]" started-at="2021-08-11T22:47:25 PDT" name="tearDown" finished-at="2021-08-11T22:47:26 PDT" duration-ms="772" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.class02.AssertionDemo@1534f01b]" started-at="2021-08-11T22:47:26 PDT" name="setUp" finished-at="2021-08-11T22:47:28 PDT" duration-ms="2780" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="logoValidation()[pri:2, instance:com.class02.AssertionDemo@1534f01b]" started-at="2021-08-11T22:47:28 PDT" name="logoValidation" finished-at="2021-08-11T22:47:29 PDT" depends-on-methods="com.class02.AssertionDemo.titleValidation" duration-ms="81" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.class02.AssertionDemo@1534f01b]" started-at="2021-08-11T22:47:29 PDT" name="tearDown" finished-at="2021-08-11T22:47:29 PDT" duration-ms="696" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.class02.AssertionDemo -->
      <class name="com.class02.TaskOne">
        <test-method signature="fourthMethod()[pri:0, instance:com.class02.TaskOne@4b14c583]" started-at="2021-08-11T22:47:00 PDT" name="fourthMethod" finished-at="2021-08-11T22:47:00 PDT" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fourthMethod -->
        <test-method signature="thirdMethod()[pri:1, instance:com.class02.TaskOne@4b14c583]" started-at="2021-08-11T22:47:00 PDT" name="thirdMethod" finished-at="2021-08-11T22:47:00 PDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdMethod -->
        <test-method signature="secondMethod()[pri:2, instance:com.class02.TaskOne@4b14c583]" started-at="2021-08-11T22:47:00 PDT" name="secondMethod" finished-at="2021-08-11T22:47:00 PDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondMethod -->
        <test-method signature="firstMethod()[pri:3, instance:com.class02.TaskOne@4b14c583]" started-at="2021-08-11T22:47:00 PDT" name="firstMethod" finished-at="2021-08-11T22:47:00 PDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstMethod -->
      </class> <!-- com.class02.TaskOne -->
      <class name="com.class02.Task02">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.class02.Task02@4ddced80]" started-at="2021-08-11T22:47:05 PDT" name="setUp" finished-at="2021-08-11T22:47:07 PDT" duration-ms="2632" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="logoDisplayed()[pri:1, instance:com.class02.Task02@4ddced80]" started-at="2021-08-11T22:47:07 PDT" name="logoDisplayed" finished-at="2021-08-11T22:47:07 PDT" duration-ms="110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoDisplayed -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.class02.Task02@4ddced80]" started-at="2021-08-11T22:47:07 PDT" name="tearDown" finished-at="2021-08-11T22:47:08 PDT" duration-ms="654" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.class02.Task02@4ddced80]" started-at="2021-08-11T22:47:08 PDT" name="setUp" finished-at="2021-08-11T22:47:12 PDT" duration-ms="4407" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="signIn()[pri:2, instance:com.class02.Task02@4ddced80]" started-at="2021-08-11T22:47:12 PDT" name="signIn" finished-at="2021-08-11T22:47:14 PDT" depends-on-methods="com.class02.Task02.logoDisplayed" duration-ms="1983" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signIn -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.class02.Task02@4ddced80]" started-at="2021-08-11T22:47:14 PDT" name="tearDown" finished-at="2021-08-11T22:47:15 PDT" duration-ms="734" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.class02.Task02@4ddced80]" started-at="2021-08-11T22:47:15 PDT" name="setUp" finished-at="2021-08-11T22:47:19 PDT" duration-ms="3732" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verification()[pri:3, instance:com.class02.Task02@4ddced80]" started-at="2021-08-11T22:47:19 PDT" name="verification" finished-at="2021-08-11T22:47:21 PDT" depends-on-methods="com.class02.Task02.signIn" duration-ms="2546" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verification -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.class02.Task02@4ddced80]" started-at="2021-08-11T22:47:21 PDT" name="tearDown" finished-at="2021-08-11T22:47:22 PDT" duration-ms="677" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.class02.Task02 -->
      <class name="com.class02.SoftAssertionDemo">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.class02.SoftAssertionDemo@2ea227af]" started-at="2021-08-11T22:47:35 PDT" name="setUp" finished-at="2021-08-11T22:47:40 PDT" duration-ms="4324" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="logoAndWelcomeValidation()[pri:0, instance:com.class02.SoftAssertionDemo@2ea227af]" started-at="2021-08-11T22:47:40 PDT" name="logoAndWelcomeValidation" finished-at="2021-08-11T22:47:42 PDT" duration-ms="2267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoAndWelcomeValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.class02.SoftAssertionDemo@2ea227af]" started-at="2021-08-11T22:47:42 PDT" name="tearDown" finished-at="2021-08-11T22:47:43 PDT" duration-ms="709" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.class02.SoftAssertionDemo -->
      <class name="com.class02.HW">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.class02.HW@78e117e3]" started-at="2021-08-11T22:47:29 PDT" name="setUp" finished-at="2021-08-11T22:47:33 PDT" duration-ms="3924" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="invalidLogin()[pri:3, instance:com.class02.HW@78e117e3]" started-at="2021-08-11T22:47:33 PDT" name="invalidLogin" finished-at="2021-08-11T22:47:34 PDT" duration-ms="1346" status="FAIL">
          <exception class="java.lang.Exception">
            <full-stacktrace>
              <![CDATA[java.lang.Exception
at com.class02.HW.invalidLogin(HW.java:108)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.class02.HW@78e117e3]" started-at="2021-08-11T22:47:34 PDT" name="tearDown" finished-at="2021-08-11T22:47:35 PDT" duration-ms="777" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="validLogin()[pri:2, instance:com.class02.HW@78e117e3]" started-at="2021-08-11T22:47:35 PDT" name="validLogin" finished-at="2021-08-11T22:47:35 PDT" depends-on-methods="com.class02.HW.invalidLogin" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method HW.validLogin()[pri:2, instance:com.class02.HW@78e117e3] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method HW.validLogin()[pri:2, instance:com.class02.HW@78e117e3] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLogin -->
      </class> <!-- com.class02.HW -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
